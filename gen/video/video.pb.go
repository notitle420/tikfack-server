// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: video/video.proto

package video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 各属性用のメッセージ定義（IDと名前）
type Actress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Actress) Reset() {
	*x = Actress{}
	mi := &file_video_video_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Actress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actress) ProtoMessage() {}

func (x *Actress) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actress.ProtoReflect.Descriptor instead.
func (*Actress) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{0}
}

func (x *Actress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Actress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Genre struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Genre) Reset() {
	*x = Genre{}
	mi := &file_video_video_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{1}
}

func (x *Genre) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Maker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Maker) Reset() {
	*x = Maker{}
	mi := &file_video_video_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Maker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maker) ProtoMessage() {}

func (x *Maker) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maker.ProtoReflect.Descriptor instead.
func (*Maker) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{2}
}

func (x *Maker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Maker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Series struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Series) Reset() {
	*x = Series{}
	mi := &file_video_video_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{3}
}

func (x *Series) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Series) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Director struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Director) Reset() {
	*x = Director{}
	mi := &file_video_video_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Director) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Director) ProtoMessage() {}

func (x *Director) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Director.ProtoReflect.Descriptor instead.
func (*Director) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{4}
}

func (x *Director) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Director) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// レビュー情報
type Review struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Average       float32                `protobuf:"fixed32,2,opt,name=average,proto3" json:"average,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_video_video_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{5}
}

func (x *Review) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Review) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

// Videoメッセージを重要度順に並び替え
type Video struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DmmId         string                 `protobuf:"bytes,1,opt,name=dmm_id,json=dmmId,proto3" json:"dmm_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DirectUrl     string                 `protobuf:"bytes,3,opt,name=direct_url,json=directUrl,proto3" json:"direct_url,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	SampleUrl     string                 `protobuf:"bytes,5,opt,name=sample_url,json=sampleUrl,proto3" json:"sample_url,omitempty"`
	ThumbnailUrl  string                 `protobuf:"bytes,6,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Price         int32                  `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	LikesCount    int32                  `protobuf:"varint,9,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	Actresses     []*Actress             `protobuf:"bytes,10,rep,name=actresses,proto3" json:"actresses,omitempty"`
	Genres        []*Genre               `protobuf:"bytes,11,rep,name=genres,proto3" json:"genres,omitempty"`
	Makers        []*Maker               `protobuf:"bytes,12,rep,name=makers,proto3" json:"makers,omitempty"`
	Series        []*Series              `protobuf:"bytes,13,rep,name=series,proto3" json:"series,omitempty"`
	Directors     []*Director            `protobuf:"bytes,14,rep,name=directors,proto3" json:"directors,omitempty"`
	Review        *Review                `protobuf:"bytes,15,opt,name=review,proto3" json:"review,omitempty"` // レビュー情報
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Video) Reset() {
	*x = Video{}
	mi := &file_video_video_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{6}
}

func (x *Video) GetDmmId() string {
	if x != nil {
		return x.DmmId
	}
	return ""
}

func (x *Video) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Video) GetDirectUrl() string {
	if x != nil {
		return x.DirectUrl
	}
	return ""
}

func (x *Video) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Video) GetSampleUrl() string {
	if x != nil {
		return x.SampleUrl
	}
	return ""
}

func (x *Video) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Video) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Video) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Video) GetLikesCount() int32 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *Video) GetActresses() []*Actress {
	if x != nil {
		return x.Actresses
	}
	return nil
}

func (x *Video) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Video) GetMakers() []*Maker {
	if x != nil {
		return x.Makers
	}
	return nil
}

func (x *Video) GetSeries() []*Series {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *Video) GetDirectors() []*Director {
	if x != nil {
		return x.Directors
	}
	return nil
}

func (x *Video) GetReview() *Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetVideosByDateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // Optional date filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosByDateRequest) Reset() {
	*x = GetVideosByDateRequest{}
	mi := &file_video_video_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosByDateRequest) ProtoMessage() {}

func (x *GetVideosByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosByDateRequest.ProtoReflect.Descriptor instead.
func (*GetVideosByDateRequest) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{7}
}

func (x *GetVideosByDateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetVideosByDateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosByDateResponse) Reset() {
	*x = GetVideosByDateResponse{}
	mi := &file_video_video_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosByDateResponse) ProtoMessage() {}

func (x *GetVideosByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosByDateResponse.ProtoReflect.Descriptor instead.
func (*GetVideosByDateResponse) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{8}
}

func (x *GetVideosByDateResponse) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

type GetVideoByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DmmId         string                 `protobuf:"bytes,1,opt,name=dmm_id,json=dmmId,proto3" json:"dmm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoByIdRequest) Reset() {
	*x = GetVideoByIdRequest{}
	mi := &file_video_video_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdRequest) ProtoMessage() {}

func (x *GetVideoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdRequest.ProtoReflect.Descriptor instead.
func (*GetVideoByIdRequest) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{9}
}

func (x *GetVideoByIdRequest) GetDmmId() string {
	if x != nil {
		return x.DmmId
	}
	return ""
}

type GetVideoByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Video         *Video                 `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoByIdResponse) Reset() {
	*x = GetVideoByIdResponse{}
	mi := &file_video_video_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdResponse) ProtoMessage() {}

func (x *GetVideoByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdResponse.ProtoReflect.Descriptor instead.
func (*GetVideoByIdResponse) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{10}
}

func (x *GetVideoByIdResponse) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

// ID指定による検索用メッセージ（すべてのフィールドはoptional）
type GetVideosByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActressId     []string               `protobuf:"bytes,1,rep,name=actress_id,json=actressId,proto3" json:"actress_id,omitempty"`    // 女優ID（複数指定可能、空でも可）
	GenreId       []string               `protobuf:"bytes,2,rep,name=genre_id,json=genreId,proto3" json:"genre_id,omitempty"`          // ジャンルID（複数指定可能、空でも可）
	MakerId       []string               `protobuf:"bytes,3,rep,name=maker_id,json=makerId,proto3" json:"maker_id,omitempty"`          // メーカーID（複数指定可能、空でも可）
	SeriesId      []string               `protobuf:"bytes,4,rep,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`       // シリーズID（複数指定可能、空でも可）
	DirectorId    []string               `protobuf:"bytes,5,rep,name=director_id,json=directorId,proto3" json:"director_id,omitempty"` // 監督ID（複数指定可能、空でも可）
	Hits          int32                  `protobuf:"varint,6,opt,name=hits,proto3" json:"hits,omitempty"`                              // 取得件数（初期値：20、最大：100、省略可）
	Offset        int32                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`                          // 検索開始位置（初期値：1、最大：50000、省略可）
	Sort          string                 `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`                               // ソート順（rank：人気順、price：価格が高い順、-price：価格が安い順、date：発売日順、review：評価順、match：マッチング順、省略可）
	GteDate       string                 `protobuf:"bytes,9,opt,name=gte_date,json=gteDate,proto3" json:"gte_date,omitempty"`          // 発売日絞り込み（この日付以降、ISO8601形式 YYYY-MM-DDT00:00:00、省略可）
	LteDate       string                 `protobuf:"bytes,10,opt,name=lte_date,json=lteDate,proto3" json:"lte_date,omitempty"`         // 発売日絞り込み（この日付以前、ISO8601形式 YYYY-MM-DDT00:00:00、省略可）
	Site          string                 `protobuf:"bytes,11,opt,name=site,proto3" json:"site,omitempty"`                              // サイト（FANZA または DMM.com、省略可）
	Service       string                 `protobuf:"bytes,12,opt,name=service,proto3" json:"service,omitempty"`                        // サービス（例：digital、省略可）
	Floor         string                 `protobuf:"bytes,13,opt,name=floor,proto3" json:"floor,omitempty"`                            // フロア（例：videoa、省略可）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosByIDRequest) Reset() {
	*x = GetVideosByIDRequest{}
	mi := &file_video_video_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosByIDRequest) ProtoMessage() {}

func (x *GetVideosByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosByIDRequest.ProtoReflect.Descriptor instead.
func (*GetVideosByIDRequest) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{11}
}

func (x *GetVideosByIDRequest) GetActressId() []string {
	if x != nil {
		return x.ActressId
	}
	return nil
}

func (x *GetVideosByIDRequest) GetGenreId() []string {
	if x != nil {
		return x.GenreId
	}
	return nil
}

func (x *GetVideosByIDRequest) GetMakerId() []string {
	if x != nil {
		return x.MakerId
	}
	return nil
}

func (x *GetVideosByIDRequest) GetSeriesId() []string {
	if x != nil {
		return x.SeriesId
	}
	return nil
}

func (x *GetVideosByIDRequest) GetDirectorId() []string {
	if x != nil {
		return x.DirectorId
	}
	return nil
}

func (x *GetVideosByIDRequest) GetHits() int32 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *GetVideosByIDRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetVideosByIDRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetVideosByIDRequest) GetGteDate() string {
	if x != nil {
		return x.GteDate
	}
	return ""
}

func (x *GetVideosByIDRequest) GetLteDate() string {
	if x != nil {
		return x.LteDate
	}
	return ""
}

func (x *GetVideosByIDRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *GetVideosByIDRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GetVideosByIDRequest) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

// キーワードによる検索用メッセージ（すべてのフィールドはoptional）
type GetVideosByKeywordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                // 検索キーワード（省略可）
	Hits          int32                  `protobuf:"varint,2,opt,name=hits,proto3" json:"hits,omitempty"`                     // 取得件数（初期値：20、最大：100、省略可）
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                 // 検索開始位置（初期値：1、最大：50000、省略可）
	Sort          string                 `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`                      // ソート順（rank：人気順、price：価格が高い順、-price：価格が安い順、date：発売日順、review：評価順、match：マッチング順、省略可）
	GteDate       string                 `protobuf:"bytes,5,opt,name=gte_date,json=gteDate,proto3" json:"gte_date,omitempty"` // 発売日絞り込み（この日付以降、ISO8601形式 YYYY-MM-DDT00:00:00、省略可）
	LteDate       string                 `protobuf:"bytes,6,opt,name=lte_date,json=lteDate,proto3" json:"lte_date,omitempty"` // 発売日絞り込み（この日付以前、ISO8601形式 YYYY-MM-DDT00:00:00、省略可）
	Site          string                 `protobuf:"bytes,7,opt,name=site,proto3" json:"site,omitempty"`                      // サイト（FANZA または DMM.com、省略可）
	Service       string                 `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`                // サービス（例：digital、省略可）
	Floor         string                 `protobuf:"bytes,9,opt,name=floor,proto3" json:"floor,omitempty"`                    // フロア（例：videoa、省略可）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosByKeywordRequest) Reset() {
	*x = GetVideosByKeywordRequest{}
	mi := &file_video_video_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosByKeywordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosByKeywordRequest) ProtoMessage() {}

func (x *GetVideosByKeywordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosByKeywordRequest.ProtoReflect.Descriptor instead.
func (*GetVideosByKeywordRequest) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{12}
}

func (x *GetVideosByKeywordRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetVideosByKeywordRequest) GetHits() int32 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *GetVideosByKeywordRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetVideosByKeywordRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetVideosByKeywordRequest) GetGteDate() string {
	if x != nil {
		return x.GteDate
	}
	return ""
}

func (x *GetVideosByKeywordRequest) GetLteDate() string {
	if x != nil {
		return x.LteDate
	}
	return ""
}

func (x *GetVideosByKeywordRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *GetVideosByKeywordRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GetVideosByKeywordRequest) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

// 検索結果レスポンス
type GetVideosByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosByIDResponse) Reset() {
	*x = GetVideosByIDResponse{}
	mi := &file_video_video_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosByIDResponse) ProtoMessage() {}

func (x *GetVideosByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosByIDResponse.ProtoReflect.Descriptor instead.
func (*GetVideosByIDResponse) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{13}
}

func (x *GetVideosByIDResponse) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

// 検索結果レスポンス
type GetVideosByKeywordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosByKeywordResponse) Reset() {
	*x = GetVideosByKeywordResponse{}
	mi := &file_video_video_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosByKeywordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosByKeywordResponse) ProtoMessage() {}

func (x *GetVideosByKeywordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosByKeywordResponse.ProtoReflect.Descriptor instead.
func (*GetVideosByKeywordResponse) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{14}
}

func (x *GetVideosByKeywordResponse) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

// 後方互換性のための検索用メッセージ（DMM API v3 パラメータに基づく）
type SearchVideosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                         // Optional keyword
	ActressId     string                 `protobuf:"bytes,2,opt,name=actress_id,json=actressId,proto3" json:"actress_id,omitempty"`    // 女優ID
	GenreId       string                 `protobuf:"bytes,3,opt,name=genre_id,json=genreId,proto3" json:"genre_id,omitempty"`          // ジャンルID
	MakerId       string                 `protobuf:"bytes,4,opt,name=maker_id,json=makerId,proto3" json:"maker_id,omitempty"`          // メーカーID
	SeriesId      string                 `protobuf:"bytes,5,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`       // シリーズID
	DirectorId    string                 `protobuf:"bytes,6,opt,name=director_id,json=directorId,proto3" json:"director_id,omitempty"` // 監督ID
	Hits          int32                  `protobuf:"varint,7,opt,name=hits,proto3" json:"hits,omitempty"`                              // 取得件数（初期値：20、最大：100）
	Offset        int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`                          // 検索開始位置（初期値：1、最大：50000）
	Sort          string                 `protobuf:"bytes,9,opt,name=sort,proto3" json:"sort,omitempty"`                               // ソート順（rank：人気順、price：価格が高い順、-price：価格が安い順、date：発売日順、review：評価順、match：マッチング順）
	GteDate       string                 `protobuf:"bytes,10,opt,name=gte_date,json=gteDate,proto3" json:"gte_date,omitempty"`         // 発売日絞り込み（この日付以降、ISO8601形式 YYYY-MM-DDT00:00:00）
	LteDate       string                 `protobuf:"bytes,11,opt,name=lte_date,json=lteDate,proto3" json:"lte_date,omitempty"`         // 発売日絞り込み（この日付以前、ISO8601形式 YYYY-MM-DDT00:00:00）
	Site          string                 `protobuf:"bytes,12,opt,name=site,proto3" json:"site,omitempty"`                              // サイト（FANZA または DMM.com）
	Service       string                 `protobuf:"bytes,13,opt,name=service,proto3" json:"service,omitempty"`                        // サービス（例：digital）
	Floor         string                 `protobuf:"bytes,14,opt,name=floor,proto3" json:"floor,omitempty"`                            // フロア（例：videoa）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchVideosRequest) Reset() {
	*x = SearchVideosRequest{}
	mi := &file_video_video_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchVideosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchVideosRequest) ProtoMessage() {}

func (x *SearchVideosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchVideosRequest.ProtoReflect.Descriptor instead.
func (*SearchVideosRequest) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{15}
}

func (x *SearchVideosRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchVideosRequest) GetActressId() string {
	if x != nil {
		return x.ActressId
	}
	return ""
}

func (x *SearchVideosRequest) GetGenreId() string {
	if x != nil {
		return x.GenreId
	}
	return ""
}

func (x *SearchVideosRequest) GetMakerId() string {
	if x != nil {
		return x.MakerId
	}
	return ""
}

func (x *SearchVideosRequest) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *SearchVideosRequest) GetDirectorId() string {
	if x != nil {
		return x.DirectorId
	}
	return ""
}

func (x *SearchVideosRequest) GetHits() int32 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *SearchVideosRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchVideosRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchVideosRequest) GetGteDate() string {
	if x != nil {
		return x.GteDate
	}
	return ""
}

func (x *SearchVideosRequest) GetLteDate() string {
	if x != nil {
		return x.LteDate
	}
	return ""
}

func (x *SearchVideosRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *SearchVideosRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *SearchVideosRequest) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

type SearchVideosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchVideosResponse) Reset() {
	*x = SearchVideosResponse{}
	mi := &file_video_video_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchVideosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchVideosResponse) ProtoMessage() {}

func (x *SearchVideosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_video_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchVideosResponse.ProtoReflect.Descriptor instead.
func (*SearchVideosResponse) Descriptor() ([]byte, []int) {
	return file_video_video_proto_rawDescGZIP(), []int{16}
}

func (x *SearchVideosResponse) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

var File_video_video_proto protoreflect.FileDescriptor

var file_video_video_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x2d, 0x0a, 0x07, 0x41, 0x63,
	0x74, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x2e, 0x0a, 0x08, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0xf6, 0x03, 0x0a, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6d, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6d, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x52,
	0x06, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x25, 0x0a,
	0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x3f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x22, 0x2c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6d,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6d, 0x6d, 0x49,
	0x64, 0x22, 0x3a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0xe3, 0x02,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x22, 0xef, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x74, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x22, 0x42, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x74, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x32, 0x99, 0x03, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x69, 0x6b, 0x66, 0x61, 0x63, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x3b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_video_video_proto_rawDescOnce sync.Once
	file_video_video_proto_rawDescData []byte
)

func file_video_video_proto_rawDescGZIP() []byte {
	file_video_video_proto_rawDescOnce.Do(func() {
		file_video_video_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_video_video_proto_rawDesc), len(file_video_video_proto_rawDesc)))
	})
	return file_video_video_proto_rawDescData
}

var file_video_video_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_video_video_proto_goTypes = []any{
	(*Actress)(nil),                    // 0: video.Actress
	(*Genre)(nil),                      // 1: video.Genre
	(*Maker)(nil),                      // 2: video.Maker
	(*Series)(nil),                     // 3: video.Series
	(*Director)(nil),                   // 4: video.Director
	(*Review)(nil),                     // 5: video.Review
	(*Video)(nil),                      // 6: video.Video
	(*GetVideosByDateRequest)(nil),     // 7: video.GetVideosByDateRequest
	(*GetVideosByDateResponse)(nil),    // 8: video.GetVideosByDateResponse
	(*GetVideoByIdRequest)(nil),        // 9: video.GetVideoByIdRequest
	(*GetVideoByIdResponse)(nil),       // 10: video.GetVideoByIdResponse
	(*GetVideosByIDRequest)(nil),       // 11: video.GetVideosByIDRequest
	(*GetVideosByKeywordRequest)(nil),  // 12: video.GetVideosByKeywordRequest
	(*GetVideosByIDResponse)(nil),      // 13: video.GetVideosByIDResponse
	(*GetVideosByKeywordResponse)(nil), // 14: video.GetVideosByKeywordResponse
	(*SearchVideosRequest)(nil),        // 15: video.SearchVideosRequest
	(*SearchVideosResponse)(nil),       // 16: video.SearchVideosResponse
}
var file_video_video_proto_depIdxs = []int32{
	0,  // 0: video.Video.actresses:type_name -> video.Actress
	1,  // 1: video.Video.genres:type_name -> video.Genre
	2,  // 2: video.Video.makers:type_name -> video.Maker
	3,  // 3: video.Video.series:type_name -> video.Series
	4,  // 4: video.Video.directors:type_name -> video.Director
	5,  // 5: video.Video.review:type_name -> video.Review
	6,  // 6: video.GetVideosByDateResponse.videos:type_name -> video.Video
	6,  // 7: video.GetVideoByIdResponse.video:type_name -> video.Video
	6,  // 8: video.GetVideosByIDResponse.videos:type_name -> video.Video
	6,  // 9: video.GetVideosByKeywordResponse.videos:type_name -> video.Video
	6,  // 10: video.SearchVideosResponse.videos:type_name -> video.Video
	7,  // 11: video.VideoService.GetVideosByDate:input_type -> video.GetVideosByDateRequest
	9,  // 12: video.VideoService.GetVideoById:input_type -> video.GetVideoByIdRequest
	15, // 13: video.VideoService.SearchVideos:input_type -> video.SearchVideosRequest
	11, // 14: video.VideoService.GetVideosByID:input_type -> video.GetVideosByIDRequest
	12, // 15: video.VideoService.GetVideosByKeyword:input_type -> video.GetVideosByKeywordRequest
	8,  // 16: video.VideoService.GetVideosByDate:output_type -> video.GetVideosByDateResponse
	10, // 17: video.VideoService.GetVideoById:output_type -> video.GetVideoByIdResponse
	16, // 18: video.VideoService.SearchVideos:output_type -> video.SearchVideosResponse
	13, // 19: video.VideoService.GetVideosByID:output_type -> video.GetVideosByIDResponse
	14, // 20: video.VideoService.GetVideosByKeyword:output_type -> video.GetVideosByKeywordResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_video_video_proto_init() }
func file_video_video_proto_init() {
	if File_video_video_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_video_video_proto_rawDesc), len(file_video_video_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_video_proto_goTypes,
		DependencyIndexes: file_video_video_proto_depIdxs,
		MessageInfos:      file_video_video_proto_msgTypes,
	}.Build()
	File_video_video_proto = out.File
	file_video_video_proto_goTypes = nil
	file_video_video_proto_depIdxs = nil
}
