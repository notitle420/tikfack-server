// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tikfack/server/internal/infrastructure/dmmapi (interfaces: MapperInterface)
//
// Generated by this command:
//
//	mockgen -destination=mock_mapper.go -package=dmmapi github.com/tikfack/server/internal/infrastructure/dmmapi MapperInterface
//

// Package dmmapi is a generated GoMock package.
package dmmapi

import (
	reflect "reflect"

	entity "github.com/tikfack/server/internal/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockMapperInterface is a mock of MapperInterface interface.
type MockMapperInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMapperInterfaceMockRecorder
	isgomock struct{}
}

// MockMapperInterfaceMockRecorder is the mock recorder for MockMapperInterface.
type MockMapperInterfaceMockRecorder struct {
	mock *MockMapperInterface
}

// NewMockMapperInterface creates a new mock instance.
func NewMockMapperInterface(ctrl *gomock.Controller) *MockMapperInterface {
	mock := &MockMapperInterface{ctrl: ctrl}
	mock.recorder = &MockMapperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMapperInterface) EXPECT() *MockMapperInterfaceMockRecorder {
	return m.recorder
}

// ConvertEntityFromDMM mocks base method.
func (m *MockMapperInterface) ConvertEntityFromDMM(arg0 Result) ([]entity.Video, *entity.SearchMetadata) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvertEntityFromDMM", arg0)
	ret0, _ := ret[0].([]entity.Video)
	ret1, _ := ret[1].(*entity.SearchMetadata)
	return ret0, ret1
}

// ConvertEntityFromDMM indicates an expected call of ConvertEntityFromDMM.
func (mr *MockMapperInterfaceMockRecorder) ConvertEntityFromDMM(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertEntityFromDMM", reflect.TypeOf((*MockMapperInterface)(nil).ConvertEntityFromDMM), arg0)
}
