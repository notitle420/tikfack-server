// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tikfack/server/internal/infrastructure/dmmapi (interfaces: MapperInterface)

// Package dmmapi is a generated GoMock package.
package dmmapi

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/tikfack/server/internal/domain/entity"
)

// MockMapperInterface is a mock of MapperInterface interface.
type MockMapperInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMapperInterfaceMockRecorder
}

// MockMapperInterfaceMockRecorder is the mock recorder for MockMapperInterface.
type MockMapperInterfaceMockRecorder struct {
	mock *MockMapperInterface
}

// NewMockMapperInterface creates a new mock instance.
func NewMockMapperInterface(ctrl *gomock.Controller) *MockMapperInterface {
	mock := &MockMapperInterface{ctrl: ctrl}
	mock.recorder = &MockMapperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMapperInterface) EXPECT() *MockMapperInterfaceMockRecorder {
	return m.recorder
}

// ConvertItem mocks base method.
func (m *MockMapperInterface) ConvertItem(arg0 Item) entity.Video {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvertItem", arg0)
	ret0, _ := ret[0].(entity.Video)
	return ret0
}

// ConvertItem indicates an expected call of ConvertItem.
func (mr *MockMapperInterfaceMockRecorder) ConvertItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertItem", reflect.TypeOf((*MockMapperInterface)(nil).ConvertItem), arg0)
}
